
#user nobody nogroup; #表示以默认用户（root）运行若取消注释，注意修改为相应权限的用户与组
worker_processes auto;

error_log /var/log/nginx/error.log; #错误日志的文件地址

pid /run/nginx.pid;

events {
    worker_connections 1024;
}

stream {
    map $ssl_preread_server_name $tcpsni_name {
        reality.example.com vision; #对应 VLESS Vision REALITY 的域名
        xhttp.example.com  xhttp; #对应 VLESS XHTTP 的域名
    }
    upstream vision {
        server 127.0.0.1:5443; #转给 VLESS Vision REALITY 本地监听端口
    }
    upstream xhttp {
        server 127.0.0.1:7443; #转给 HTTP/2 server 本地监听端口
    }
    server {
        listen 443;
        listen [::]:443; #无 IPv6，此项可删除
        ssl_preread on;
        proxy_protocol on; #启用 PROXY protocol 发送（全局模式）
        proxy_pass $tcpsni_name;
    }
}

http {
    include mime.types;
    default_type application/octet-stream;

    #创建自定义变量 $client_ip 获取客户端真实 IP，其配置如下：
    map $http_x_forwarded_for $client_ip {
        "" $remote_addr;
        "~*(?P<firstAddr>([0-9a-f]{0,4}:){1,7}[0-9a-f]{1,4}|([0-9]{1,3}\.){3}[0-9]{1,3})$" $firstAddr;
    }

    #启用访问日志，其调整后的配置如下：（选配）
    log_format main '$client_ip - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main; #访问日志的文件地址（选配）

    sendfile on;

    keepalive_timeout 65;

    server {
        listen 80;
        listen [::]:80; #无 IPv6，此项可删除
        return 301 https://$host$request_uri; #HTTP 自动跳转 HTTPS，让网站看起来更真实
    }

    server {
        listen 443 quic reuseport; #仅版本不小于 v1.25.0 且 SSL 库支持 QUIC（HTTP/3） 配置，否则必须删除
        listen [::]:443 quic reuseport; #仅版本不小于 v1.25.0 且 SSL 库支持 QUIC（HTTP/3） 配置，否则必须删除另无 IPv6，此项也可删除
        listen 127.0.0.1:7443 ssl proxy_protocol; #仅版本不小于 v1.25.1 配置，否则必须删除
        http2 on; #仅版本不小于 v1.25.1 配置，否则必须删除
        set_real_ip_from 127.0.0.1;
        real_ip_header proxy_protocol;

        ssl_certificate /path/fullchain.crt; #换成自己的证书
        ssl_certificate_key /path/cert.key; #换成自己的密钥

        ssl_protocols TLSv1.2 TLSv1.3; #若使用 OpenSSL 库，TLSv1.3 需要 OpenSSL 库的版本不小于 1.1.1 构建才支持
        ssl_prefer_server_ciphers on; #优先使用服务端的密码套件（对如下 TLSv1.2 协议的密码套件有效）
        ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-CHACHA20-POLY1305; #若证书为 RSA 证书，所有 ECDSA 改为 RSA
        ssl_ecdh_curve secp521r1:secp384r1:secp256r1:x25519; #若使用 OpenSSL 库，此项配置参数需要 OpenSSL 库的版本不小于 3.0.0 构建才支持

        location /xhttp { #与 VLESS XHTTP 应用中 path 对应
            grpc_pass grpc://127.0.0.1:2023; #转发给本机 VLESS XHTTP 监听端口
            grpc_set_header Host $host;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }   

        location / {
            add_header Alt-Svc 'h3=":443"; ma=86400'; #通告 HTTP/3 server 的可用性
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; #启用 HSTS
            root /var/www/html; #修改为自己存放的 WEB 文件路径
            index index.html index.htm;
        }
    }
}